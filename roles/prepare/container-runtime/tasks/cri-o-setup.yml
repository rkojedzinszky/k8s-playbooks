---
- name: Install packages needed to access OBS repository
  apt:
    name:
    - apt-transport-https
    - ca-certificates

- name: Import OBS key
  apt_key:
    url: https://build.opensuse.org/projects/devel:kubic:libcontainers:stable/public_key.asc
    id: 2472D6D0D2F66AF87ABA8DA34D64390375060AA4

- name: Deploy cri-o sources.list
  copy:
    content: "deb https://download.opensuse.org/repositories/devel:/kubic:/libcontainers:/stable/Debian_10 ./"
    dest: /etc/apt/sources.list.d/cri-o.list
  notify: update apt cache

- meta: flush_handlers

- name: install cri-o
  apt:
    name: cri-o-{{ cri_o_version }}
  notify: reload systemd

- name: clear cri-o shipped cni configuration
  file:
    path: "/etc/cni/net.d/{{ item }}"
    state: absent
  loop: "{{ cri_o_cni_configurations }}"
  notify: restart crio

- name: Set runc path for cri-o
  ini_file:
    path: /etc/crio/crio.conf
    section: crio.runtime.runtimes.runc
    option: runtime_path
    value: "{{ cri_o_runc_runtime_path | to_json }}"
  notify: restart crio

- name: Set default cgroup_manager for cri-o
  ini_file:
    path: /etc/crio/crio.conf
    section: crio.runtime
    option: cgroup_manager
    value: "{{ container_runtime_cgroup_driver | to_json }}"
  notify: restart crio

- name: Set default registry for cri-o
  ini_file:
    path: /etc/crio/crio.conf
    section: crio.image
    option: registries
    value: "{{ container_runtime_registries | to_json }}"
  notify: restart crio

- name: Set insecure registries for cri-o
  ini_file:
    path: /etc/crio/crio.conf
    section: crio.image
    option: insecure_registries
    value: "{{ container_runtime_insecure_registries | to_json }}"
  notify: restart crio

- name: Set container log size for cri-o
  ini_file:
    path: /etc/crio/crio.conf
    section: crio.runtime
    option: log_size_max
    value: "{{ container_runtime_max_log_size }}"
  notify: restart crio

- meta: flush_handlers

- name: Ensure crio is started
  service:
    name: crio
    state: started
    enabled: yes
