---
- name: Check if node needs to be joined
  stat:
    path: /etc/kubernetes/kubelet.conf
  register: kubelet_conf_stat

- name: Collect nodes which needs to be joined
  set_fact:
    nodes_to_join: |-
      {% set nodes_to_join = [] %}
      {% for h in groups['cluster'] %}{% if not hostvars[h].kubelet_conf_stat.stat.exists %}{% set _ = nodes_to_join.append(h) %}{% endif %}{% endfor %}
      {{ nodes_to_join }}
  run_once: yes

- debug:
    msg: "Nodes to join: {{ nodes_to_join }}"
  run_once: yes

- when: "nodes_to_join|length > 0"
  block:
  - name: Use existing chosen_master
    set_fact:
      chosen_master: "{{ hostvars[groups['master'] | first].chosen_master }}"
    run_once: yes

  - name: Obtain join command
    run_once: yes
    delegate_to: "{{ chosen_master }}"
    command: "kubeadm token create --print-join-command"
    register: join_command

  - name: Parse join command
    run_once: yes
    set_fact:
      join_command: "{{ join_command.stdout_lines[0] }}"
