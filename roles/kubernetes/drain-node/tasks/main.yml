# Drain a node
---
- name: Ensure node is Ready
  command:
  args:
    argv:
    - kubectl
    - get
    - node
    - "{{ inventory_hostname }}"
    - -o
    - jsonpath={range .status.conditions[?(.reason == "KubeletReady")]}{.reason}{"\n"}{end}
  delegate_to: "{{ chosen_master }}"
  register: node_status
  failed_when: "not node_status.stdout_lines"

- name: "{{ inventory_hostname }} - drain"
  command: "kubectl drain --ignore-daemonsets --delete-local-data --force {{ inventory_hostname }}"
  delegate_to: "{{ chosen_master }}"
